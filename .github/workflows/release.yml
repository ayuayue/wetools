name: Build And Release
on:
  push:
      tags:
        - "v*"
#    branches:
#      - main
permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, macos-latest, ubuntu-latest ]
        include:
          - os: windows-latest
            output-name: wetools-windows.zip
            build-command: flutter build windows
            artifact-path: build/windows/x64/runner/Release
            platform: windows
          - os: macos-latest
            output-name: wetools-macos.zip
            build-command: flutter build macos
            artifact-path: build/macos/Build/Products/Release/wetools.app
            platform: macos
          - os: ubuntu-latest
            output-name: wetools-linux.tar.gz
            build-command: flutter build linux
            artifact-path: build/linux/x64/release/bundle
            platform: linux
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.3'
          channel: 'stable'

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build libgtk-3-dev

      - name: Get dependencies
        run: flutter pub get

      - name: Build application
        run: |
          flutter config --enable-windows-desktop
          flutter config --enable-macos-desktop
          flutter config --enable-linux-desktop
          ${{ matrix.build-command }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}
          path: ${{ matrix.artifact-path }}

  release:
    runs-on: ubuntu-latest
    needs: build    # 等待所有构建 Job 完成后再执行
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: "Release ${{ github.ref_name }}"
          draft: false
          prerelease: false

      - name: Upload Release Assets - Windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/windows/wetools-windows.zip
          asset_name: wetools-windows.zip
          asset_content_type: application/zip

      - name: Upload Release Assets - macOS
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/macos/wetools-macos.zip
          asset_name: wetools-macos.zip
          asset_content_type: application/zip

      - name: Upload Release Assets - Linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/linux/wetools-linux.tar.gz
          asset_name: wetools-linux.tar.gz
          asset_content_type: application/gzip
